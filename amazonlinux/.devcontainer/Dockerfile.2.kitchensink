# Note: You can use any Debian/Ubuntu based image you want. 
FROM smankoo/devcon-amazonlinux:latest

# This Dockerfile adds a non-root user with sudo access. Use the "remoteUser"
# property in devcontainer.json to use it. On Linux, the container user's GID/UIDs
# will be updated to match your local UID/GID (when using the dockerFile property).
# See https://aka.ms/vscode-remote/containers/non-root-user for details.
ARG USERNAME=vscode
ARG USER_UID=1000
ARG USER_GID=$USER_UID

ARG ENABLE_NONROOT_DOCKER="true"
ARG SOURCE_SOCKET=/var/run/docker-host.sock
ARG TARGET_SOCKET=/var/run/docker.sock

ARG DOCKER_SCRIPT_SOURCE="https://raw.githubusercontent.com/smankoo/devcons/master/script-library/docker-redhat.sh"
ARG TERRAFORM_SCRIPT_SOURCE="https://raw.githubusercontent.com/smankoo/devcons/master/script-library/terraform.sh"


RUN curl -sSL $DOCKER_SCRIPT_SOURCE -o /tmp/docker-setup.sh && \
    chmod 755 /tmp/docker-setup.sh && \
    /bin/bash /tmp/docker-setup.sh "${ENABLE_NONROOT_DOCKER}" "${SOURCE_SOCKET}" "${TARGET_SOCKET}" "${USERNAME}"

RUN curl -sSL $TERRAFORM_SCRIPT_SOURCE -o /tmp/terraform-setup.sh && \
    chmod 755 /tmp/terraform-setup.sh && \
    /bin/bash /tmp/terraform-setup.sh

# Install AWS SAM CLI
RUN su - ${USERNAME} -c 'pip3 install --user --upgrade awscli aws-sam-cli'

# install commonly used python modules
RUN su - ${USERNAME} -c 'pip3 install --user --upgrade wheel pipenv bs4 requests keyring keyrings.alt boto3 pylint'


# Clean up
RUN rm /tmp/* \
    && yum -y autoremove \
    && yum -y clean all \
    && rm -rf /var/cache/yum 

# Setting the ENTRYPOINT to docker-init.sh will configure non-root access to 
# the Docker socket if "overrideCommand": false is set in devcontainer.json. 
# The script will also execute CMD if you need to alter startup behaviors.

ENTRYPOINT [ "/usr/local/share/docker-init.sh" ]
CMD [ "sleep", "infinity" ]